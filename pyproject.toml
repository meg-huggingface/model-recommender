[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.urls]
Documentation = "https://github.com/unknown/hatch-demo#readme"
Issues = "https://github.com/unknown/hatch-demo/issues"
Source = "https://github.com/unknown/hatch-demo"

[tool.hatch.version]
path = "recommender/__init__.py"

[project]
name = "recommender"
description = "Description"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
authors = [{ name = "Philipp Schmid", email = "schmidphilipp1995@gmail.com" }]
classifiers = [
  "Topic :: Internet",
  "Topic :: Software Development :: Libraries :: Application Frameworks",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development",
  "Framework :: FastAPI",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
]
dynamic = ["version"]
scripts = { recommender = "recommender.cli:main" }
dependencies = [
  "transformers==4.39.0",
  "torch>=2.2.0",
  "accelerate",
  "sentencepiece",
]

[project.optional-dependencies]
api = ["fastapi", "fastapi-cache2[redis]"]
test = ["pytest"]
dev = ["ruff", "black", "isort", "mypy", "hatch"]

[tool.isort]
profile = "black"
known_third_party = ["accelerate", "transformers", "torch"]


[tool.ruff]
lint.select = [
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "F", # pyflakes
  "I", # isort
  "C", # flake8-comprehensions
  "B", # flake8-bugbear
]
lint.ignore = [
  "E501", # Line length (handled by ruff-format)
  "B008", # do not perform function calls in argument defaults
  "C901", # too complex
]
# Same as Black.
line-length = 119

# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.9
target-version = "py39"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

# [tool.ruff.isort]
# known-third-party = ["fastapi", "pydantic", "starlette"]

[tool.pytest.ini_options]
addopts = "-ra"
testpaths = ["tests"]
pythonpath = ['.']
